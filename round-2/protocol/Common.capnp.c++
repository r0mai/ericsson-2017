// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Common.capnp

#include "Common.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<33> b_9aa647d8c3b70d99 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    153,  13, 183, 195, 216,  71, 166, 154,
     13,   0,   0,   0,   2,   0,   0,   0,
     37, 106, 230, 119, 103, 124, 137, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109, 111, 110,  46,  99,
     97, 112, 110, 112,  58,  68, 105, 114,
    101,  99, 116, 105, 111, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112,   0,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0,
    100, 111, 119, 110,   0,   0,   0,   0,
    114, 105, 103, 104, 116,   0,   0,   0, }
};
::capnp::word const* const bp_9aa647d8c3b70d99 = b_9aa647d8c3b70d99.words;
#if !CAPNP_LITE
static const uint16_t m_9aa647d8c3b70d99[] = {2, 1, 3, 0};
const ::capnp::_::RawSchema s_9aa647d8c3b70d99 = {
  0x9aa647d8c3b70d99, b_9aa647d8c3b70d99.words, 33, nullptr, m_9aa647d8c3b70d99,
  0, 4, nullptr, nullptr, nullptr, { &s_9aa647d8c3b70d99, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Direction_9aa647d8c3b70d99, 9aa647d8c3b70d99);
static const ::capnp::_::AlignedData<47> b_eca0183b0ddb2bb3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    179,  43, 219,  13,  59,  24, 160, 236,
     13,   0,   0,   0,   1,   0,   1,   0,
     37, 106, 230, 119, 103, 124, 137, 240,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109, 111, 110,  46,  99,
     97, 112, 110, 112,  58,  80, 111, 115,
    105, 116, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 119,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eca0183b0ddb2bb3 = b_eca0183b0ddb2bb3.words;
#if !CAPNP_LITE
static const uint16_t m_eca0183b0ddb2bb3[] = {1, 0};
static const uint16_t i_eca0183b0ddb2bb3[] = {0, 1};
const ::capnp::_::RawSchema s_eca0183b0ddb2bb3 = {
  0xeca0183b0ddb2bb3, b_eca0183b0ddb2bb3.words, 47, nullptr, m_eca0183b0ddb2bb3,
  0, 2, i_eca0183b0ddb2bb3, nullptr, nullptr, { &s_eca0183b0ddb2bb3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace protocol {

// Position
constexpr uint16_t Position::_capnpPrivate::dataWordSize;
constexpr uint16_t Position::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Position::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Position::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

