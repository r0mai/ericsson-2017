// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Command.capnp

#include "Command.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_ac5e264a1547dce3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    227, 220,  71,  21,  74,  38,  94, 172,
     14,   0,   0,   0,   1,   0,   1,   0,
     35, 169,  79,  85,  60, 245, 248, 171,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  77, 111,
    118, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 105, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 114, 101,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    153,  13, 183, 195, 216,  71, 166, 154,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ac5e264a1547dce3 = b_ac5e264a1547dce3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ac5e264a1547dce3[] = {
  &s_9aa647d8c3b70d99,
};
static const uint16_t m_ac5e264a1547dce3[] = {1, 0};
static const uint16_t i_ac5e264a1547dce3[] = {0, 1};
const ::capnp::_::RawSchema s_ac5e264a1547dce3 = {
  0xac5e264a1547dce3, b_ac5e264a1547dce3.words, 48, d_ac5e264a1547dce3, m_ac5e264a1547dce3,
  1, 2, i_ac5e264a1547dce3, nullptr, nullptr, { &s_ac5e264a1547dce3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_c0b4b2c3dfb664f2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242, 100, 182, 223, 195, 178, 180, 192,
     14,   0,   0,   0,   1,   0,   1,   0,
     35, 169,  79,  85,  60, 245, 248, 171,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    158,  32,  29,  37, 192, 177,  39, 160,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0b4b2c3dfb664f2 = b_c0b4b2c3dfb664f2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c0b4b2c3dfb664f2[] = {
  &s_a027b1c0251d209e,
};
static const uint16_t m_c0b4b2c3dfb664f2[] = {0};
static const uint16_t i_c0b4b2c3dfb664f2[] = {0};
const ::capnp::_::RawSchema s_c0b4b2c3dfb664f2 = {
  0xc0b4b2c3dfb664f2, b_c0b4b2c3dfb664f2.words, 26, d_c0b4b2c3dfb664f2, m_c0b4b2c3dfb664f2,
  1, 1, i_c0b4b2c3dfb664f2, nullptr, nullptr, { &s_c0b4b2c3dfb664f2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_a027b1c0251d209e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    158,  32,  29,  37, 192, 177,  39, 160,
     22,   0,   0,   0,   1,   0,   1,   0,
    242, 100, 182, 223, 195, 178, 180, 192,
      2,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,  46,  99, 111,
    109, 109,  97, 110, 100, 115,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     90, 188, 253, 165, 112, 161, 105, 157,
     61,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 118, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    227, 220,  71,  21,  74,  38,  94, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 103, 105, 110,   0,   0,   0, }
};
::capnp::word const* const bp_a027b1c0251d209e = b_a027b1c0251d209e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a027b1c0251d209e[] = {
  &s_9d69a170a5fdbc5a,
  &s_ac5e264a1547dce3,
  &s_c0b4b2c3dfb664f2,
};
static const uint16_t m_a027b1c0251d209e[] = {1, 0};
static const uint16_t i_a027b1c0251d209e[] = {0, 1};
const ::capnp::_::RawSchema s_a027b1c0251d209e = {
  0xa027b1c0251d209e, b_a027b1c0251d209e.words, 44, d_a027b1c0251d209e, m_a027b1c0251d209e,
  3, 2, i_a027b1c0251d209e, nullptr, nullptr, { &s_a027b1c0251d209e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_9d69a170a5fdbc5a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90, 188, 253, 165, 112, 161, 105, 157,
     31,   0,   0,   0,   1,   0,   1,   0,
    158,  32,  29,  37, 192, 177,  39, 160,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,  46,  99, 111,
    109, 109,  97, 110, 100, 115,  46, 108,
    111, 103, 105, 110,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 101,  97, 109,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 115, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9d69a170a5fdbc5a = b_9d69a170a5fdbc5a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9d69a170a5fdbc5a[] = {
  &s_a027b1c0251d209e,
};
static const uint16_t m_9d69a170a5fdbc5a[] = {1, 0};
static const uint16_t i_9d69a170a5fdbc5a[] = {0, 1};
const ::capnp::_::RawSchema s_9d69a170a5fdbc5a = {
  0x9d69a170a5fdbc5a, b_9d69a170a5fdbc5a.words, 48, d_9d69a170a5fdbc5a, m_9d69a170a5fdbc5a,
  1, 2, i_9d69a170a5fdbc5a, nullptr, nullptr, { &s_9d69a170a5fdbc5a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace protocol {

// Move
constexpr uint16_t Move::_capnpPrivate::dataWordSize;
constexpr uint16_t Move::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Move::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Move::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Command
constexpr uint16_t Command::_capnpPrivate::dataWordSize;
constexpr uint16_t Command::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Command::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Command::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Command::Commands
constexpr uint16_t Command::Commands::_capnpPrivate::dataWordSize;
constexpr uint16_t Command::Commands::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Command::Commands::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Command::Commands::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Command::Commands::Login
constexpr uint16_t Command::Commands::Login::_capnpPrivate::dataWordSize;
constexpr uint16_t Command::Commands::Login::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Command::Commands::Login::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Command::Commands::Login::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

